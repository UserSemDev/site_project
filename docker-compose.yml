services:
  auth:
    build: ./auth
    tty: true
    restart: always
    ports:
      - "8001:8000"
    env_file:
      - ./auth/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://auth:8000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.localhost`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.services.auth.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth:8001/auth"
      - "traefik.http.middlewares.auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth.forwardauth.authResponseHeaders=X-User"

  mongodb:
    image: mongo:8.0.5
    restart: always
    ports:
      - "27018:27017"
    env_file:
      - ./auth/.env
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./backend:/usr/share/nginx/html:ro
    ports:
      - "8082:80"
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.localhost`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.http.middlewares.auth.forwardauth.address=http://auth:8001/auth"
      - "traefik.http.middlewares.auth.forwardauth.trustforwardheader=true"
      - "traefik.http.middlewares.auth.forwardauth.authResponseHeaders=X-User"

  reverse-proxy:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:8080"
    ports:
      - "8080:8080"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - "auth"
    networks:
      - "backend"

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web"

networks:
  backend:

volumes:
  mongo_data: